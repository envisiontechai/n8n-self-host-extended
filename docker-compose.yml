volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  redis_storage:

networks:
  selfn8n:

x-n8n: &service-n8n
  image: n8nio/n8n:1.86.0
  networks: ["selfn8n"]
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - GENERIC_TIMEZONE=Asia/Kolkata
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - WEBHOOK_TUNNEL_URL=${WEBHOOK_TUNNEL_URL}
    - WEBHOOK_URL=${WEBHOOK_URL}
    - N8N_EMAIL_MODE=smtp
    - N8N_SMTP_HOST=${SMTP_HOST}
    - N8N_SMTP_PORT=${SMTP_PORT}
    - N8N_SMTP_USER=${SMTP_USER}
    - N8N_SMTP_PASS=${SMTP_PASS}
    - N8N_SMTP_SENDER=${SMTP_SENDER}
    - N8N_SMTP_SSL=${SMTP_SSL}
    - NODE_FUNCTION_ALLOW_BUILTIN=crypto
    - N8N_RUNNERS_ENABLED=true
    - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
  links:
    - postgres

services:
  postgres:
    image: postgres:16
    networks: ["selfn8n"]
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ["selfn8n"]
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  redis:
    image: redis:alpine
    container_name: redis
    networks: ["selfn8n"]
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - redis_storage:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
      - ./nodes:/home/node/.n8n/custom
    depends_on:
      n8n-import:
        condition: service_completed_successfully

  crawl4ai:
    image: unclecode/crawl4ai:basic-arm64
    container_name: crawl4ai
    networks: ["selfn8n"]
    environment:
      - CRAWL4AI_API_TOKEN=${CRAWL4AI_API_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MAX_CONCURRENT_TASKS=2
    volumes:
      - /dev/shm:/dev/shm
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    restart: unless-stopped
