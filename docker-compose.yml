volumes:
  n8n_storage:
  postgres_storage:

networks:
  selfn8n:

x-n8n: &service-n8n
  build:
    context: .
    dockerfile: Dockerfile
  networks: ["selfn8n"]
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - GENERIC_TIMEZONE=Asia/Kolkata
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - WEBHOOK_TUNNEL_URL=https://n8n.envisiontech.agency/
    - WEBHOOK_URL=https://n8n.envisiontech.agency/
    - N8N_EMAIL_MODE=smtp
    - N8N_SMTP_HOST=smtp-relay.brevo.com
    - N8N_SMTP_PORT=587
    - N8N_SMTP_USER=${SMTP_USER}
    - N8N_SMTP_PASS=${SMTP_PASS}
    - N8N_SMTP_SENDER=ai.envisiontech@gmail.com
    - N8N_SMTP_SSL=false
    - NODE_FUNCTION_ALLOW_BUILTIN=crypto
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
  links:
    - postgres

services:
  postgres:
    image: postgres:16-alpine
    networks: ["selfn8n"]
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
      - ./nodes:/home/node/.n8n/custom
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
